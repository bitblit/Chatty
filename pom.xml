<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.erigir</groupId>
    <artifactId>chatty</artifactId>
    <packaging>war</packaging>
    <name>Chatty Web Server</name>
    <version>1.0.0-SNAPSHOT</version>
    <description>Web server of the chatty application</description>
    <url>http://chatty.erigir.com/</url>
    <inceptionYear>2015</inceptionYear>

    <dependencies>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
            <version>5.8.2</version>
        </dependency>

        <!-- This replaces the old servlet api -->
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>6.0.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.11.0</version>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.4</version>
            <exclusions>
                <exclusion>  <!-- declare the exclusion here -->
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.5</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.13</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.11</version>
        </dependency>

        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk</artifactId>
            <version>${aws.version}</version>
        </dependency>

        <dependency>
            <groupId>com.erigir</groupId>
            <artifactId>wrench-commons</artifactId>
            <version>${wrench.version}</version>
        </dependency>
        <dependency>
            <groupId>com.erigir</groupId>
            <artifactId>wrench-web</artifactId>
            <version>${wrench.version}</version>
        </dependency>
        <dependency>
            <groupId>com.erigir</groupId>
            <artifactId>wrench-aws</artifactId>
            <version>${wrench.version}</version>
        </dependency>
        <!--
        This might be needed but... doesn't seem to help
        <dependency>
            <groupId>jakarta.security.auth.message</groupId>
            <artifactId>jakarta.security.auth.message-api</artifactId>
            <version>1.1.3</version>
        </dependency>
        -->

    </dependencies>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <handlebars-version>1.3.0</handlebars-version>

        <maven.compiler.source>18</maven.compiler.source>
        <maven.compiler.target>18</maven.compiler.target>
        <jackson.version>2.14.2</jackson.version>
        <aws.version>1.12.398</aws.version>
        <aws.lambda.version>1.2.1</aws.lambda.version>
        <wrench.version>2.2.16+16</wrench.version>
        <spring.version>6.0.8</spring.version>

        <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
        <maven.build.timestamp.format>yyyyMMdd-HHmm</maven.build.timestamp.format>
        <mytime>${maven.build.timestamp}</mytime>
        <tomcat.port.number>8080</tomcat.port.number>
        <tomcat.ssl.port.number>8443</tomcat.ssl.port.number>
    </properties>


    <build>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>runtime.properties</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>${basedir}/src/test/resources</directory>
            </testResource>
        </testResources>
        <plugins>
            <!-- CWeiss note to self:
            As of 2023-02-03 this doesn't currently work - when they went to Tomcat 10 the javax.servlet
            jar was replaced with the jakarta.servlet, and you have to use Tomcat 10  for Spring 6,
            and when you try to run the embedded server below (mvn cargo:run) it fails with a missing
            java.lang.NoClassDefFoundError: jakarta/security/auth/message/config/RegistrationListener
            error.  Not worth debugging right now... -->
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <version>1.8.3</version>
                <!--
                <dependencies>
                    <dependency>
                        <groupId>org.apache.tomcat</groupId>
                        <artifactId>tomcat-jaspic-api</artifactId>
                        <version>10.0.4</version>
                    </dependency>
                </dependencies>
                -->
                <configuration>
                    <systemProperties>
                        <name>spring.profiles.active</name>
                        <value>local</value>
                    </systemProperties>
                    <path>/</path>
                    <port>${tomcat.port.number}</port>
                    <httpsPort>${tomcat.ssl.port.number}</httpsPort>
                    <keystoreFile>${basedir}/src/main/config/tomcat-ssl.keystore</keystoreFile>
                    <keystorePass>jetty8</keystorePass>
                    <container>
                        <containerId>tomcat10x</containerId>
                        <type>embedded</type>
                    </container>
                    <deployables>
                        <deployable>
                            <type>war</type>
                            <location>${project.build.directory}/${project.build.finalName}.war</location>
                            <properties>
                                <context>/test</context>
                            </properties>
                        </deployable>
                    </deployables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.2</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.erigir</groupId>
                <artifactId>seedy-maven-plugin</artifactId>
                <version>0.4</version>
                <configuration>
                    <afterGreenSleepSeconds>30</afterGreenSleepSeconds>
                    <applicationName>chairman</applicationName>
                    <s3Bucket>pt-arch-seedy-uploads</s3Bucket>
                    <s3Prefix>chairman/</s3Prefix>
                    <poolConfigFile>${basedir}/src/main/config/live-config.json</poolConfigFile>
                    <solutionStack>64bit Amazon Linux 2015.03 v1.4.1 running Tomcat 8 Java 8</solutionStack>
                    <preFlipLiveWaitSeconds>15</preFlipLiveWaitSeconds>
                    <prePingSleepSeconds>300</prePingSleepSeconds>
                    <maxWaitSeconds>420</maxWaitSeconds>
                    <liveServerDomainName>chairman.elasticbeanstalk.com</liveServerDomainName>
                    <preFlipLiveWaitSeconds>15</preFlipLiveWaitSeconds>
                    <terminateOldEnviroment>false</terminateOldEnviroment>
                    <applicationFile>${project.build.directory}/${project.build.finalName}.war</applicationFile>
                    <assumedRoleArn>arn:aws:iam::607261397013:role/seedy-deploy-production</assumedRoleArn>
                    <assumedRoleExternalId>zFpHOHvSK4iU38Sk</assumedRoleExternalId>
                </configuration>
            </plugin>

        </plugins>

    </build>
    <profiles>
        <profile>
            <id>build</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>javadoc</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
